
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: dev_nb/02_fully_connected.ipynb

from exp.nb_01 import *

def x_to_tensor(listed):
    return tensor(list(map(array, listed)), dtype=torch.float32).reshape(len(listed), -1)

def y_to_tensor(listed):
    return tensor(array(listed))

def normalize(x, m, s): return (x-m)/s

def get_data():
    mnist = DataBlock(blocks=(ImageBlock(cls=PILImageBW), CategoryBlock),
                 get_items = get_image_files,
                 splitter = GrandparentSplitter('training', 'testing'),
                 get_y = parent_label)
    dls = mnist.dataloaders(untar_data(URLs.MNIST))
    x_train, y_train = zip(*dls.train_ds)
    x_valid, y_valid = zip(*dls.valid_ds)

    x_train = tensor(list(map(array, x_train)), dtype=torch.float32).view(len(dls.train_ds), -1)
    x_valid = tensor(list(map(array, x_valid)), dtype=torch.float32).view(len(dls.valid_ds), -1)
    y_train = tensor(y_train)
    y_valid = tensor(y_valid)

    x_mean = x_train.mean()
    x_std = x_train.std()
    x_train, x_valid = normalize(x_train, x_mean, x_std), normalize(x_valid, x_mean, x_std)
    x_train, x_valid = x_train / 255.0, x_valid / 255.0

    return x_train, y_train, x_valid, y_valid



def test_near_zero(a, tol=1e-3): assert a.abs() < tol, f'Not Near zero: {a}'

from torch.nn import init

def mse(output, target): return (output.squeeze(-1) - target).pow(2).mean()

from torch import nn